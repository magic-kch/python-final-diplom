services:
  postgres:
    image: postgres:14.3-alpine3.15
    ports:
        - 5431:5432
    env_file:
      - pg.env
    volumes:
      - pgdata2:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U diplom_user -d netology_pd_diplom"] #, "-h", "127.0.0.1", "-p", "5431"]
      interval: 5s
      timeout: 6s
      retries: 5

  backend:
    build: .
    env_file:
      - _env
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    command: #python manage.py runserver 0.0.0.0:8000
      - "bash"
      - "backendStartup.sh"
    volumes:
      - backend-data:/python-final-diplom/
    ports:
      - "8000:8000"

  nginx:
    image: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - backend-data:/python-final-diplom/
    depends_on:
      - backend

  redis:
    image: redis
    restart: unless-stopped
#    depends_on:
#      - backend
    ports:
      - "6379:6379"

  celery:
    build: .
    environment:
      PG_DSN: 'postgresql+psycopg2://diplom_user:pg_postgres@postgres/netology_pd_diplom'
      CELERY_BROKER_URL: 'redis://redis:6379/0'
      CELERY_RESULT_BACKEND: 'redis://redis:6379/1'
      DJANGO_SETTINGS_MODULE: orders.settings
      PYTHONPATH: /python-final-diplom/backend
    container_name: celery
    restart: unless-stopped
    depends_on:
        postgres:
          condition: service_healthy
        redis:
          condition: service_started
    command: celery -A backend.celery_app worker --loglevel=info
    volumes:
      - backend-data:/python-final-diplom/
#    volumes:
#      - pgdata2:/var/lib/postgresql/data

volumes:
  pgdata2:
    driver: local
  backend-data:
    driver: local
